// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`React tree for provided and consumed components. Should correctly provide manager context from decorated HoC provider.: Provision: Decorated - Decorated. 1`] = `
<Memo(DS.Observer)>
  <ExampleContextDecoratedProvider>
    <DS.Consumer>
      <ExampleContextClassConsumer
        exampleContext={
          Object {
            "exampleActions": Object {
              "setExampleNumber": [Function],
              "setExampleString": [Function],
            },
            "exampleNumber": 0,
            "exampleString": "initial",
          }
        }
      >
        <span>
          {"exampleActions":{},"exampleNumber":0,"exampleString":"initial"}
        </span>
      </ExampleContextClassConsumer>
    </DS.Consumer>
  </ExampleContextDecoratedProvider>
</Memo(DS.Observer)>
`;

exports[`React tree for provided and consumed components. Should correctly provide manager context from decorated HoC provider.: Provision: Decorated - Functional. 1`] = `
<Memo(DS.Observer)>
  <ExampleContextDecoratedProvider>
    <ExampleContextFunctionalConsumer>
      <span>
        {"exampleActions":{},"exampleNumber":0,"exampleString":"initial"}
      </span>
    </ExampleContextFunctionalConsumer>
  </ExampleContextDecoratedProvider>
</Memo(DS.Observer)>
`;

exports[`React tree for provided and consumed components. Should correctly provide manager context from functional provider.: Provision: Functional - Decorated. 1`] = `
<Memo(DS.Observer)>
  <DS.Consumer>
    <ExampleContextClassConsumer
      exampleContext={
        Object {
          "exampleActions": Object {
            "setExampleNumber": [Function],
            "setExampleString": [Function],
          },
          "exampleNumber": 0,
          "exampleString": "initial",
        }
      }
    >
      <span>
        {"exampleActions":{},"exampleNumber":0,"exampleString":"initial"}
      </span>
    </ExampleContextClassConsumer>
  </DS.Consumer>
</Memo(DS.Observer)>
`;

exports[`React tree for provided and consumed components. Should correctly provide manager context from functional provider.: Provision: Functional - Functional. 1`] = `
<Memo(DS.Observer)>
  <ExampleContextFunctionalConsumer>
    <span>
      {"exampleActions":{},"exampleNumber":0,"exampleString":"initial"}
    </span>
  </ExampleContextFunctionalConsumer>
</Memo(DS.Observer)>
`;
