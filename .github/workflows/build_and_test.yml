name: build-and-test

on:
  push:
    branches:
      - main
      - dev
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 19

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - run: pnpm lint
      - run: pnpm typecheck
      - run: pnpm test
      - run: pnpm build:dts
      - run: pnpm build:cjs
      - run: pnpm build:esm
      - run: pnpm build:ptb

      - name: Install zip
        uses: montudor/action-zip@v1

      - name: Archive build artifacts
        working-directory: target/
        run: zip -qq -r packages.zip dist/

      - name: Upload build packages
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: packages
          path: target/packages.zip
          retention-days: 1

  upload-nightly:
    if: ${{ github.ref_name == 'main' && github.event_name != 'pull_request' }}
    needs: [build-and-test]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: packages

      - name: Update nightly tag
        uses: EndBug/latest-tag@latest
        id: update-nightly-tag
        with:
          ref: nightly

      - name: Publish nightly packages release
        if: ${{ steps.update-nightly-tag.outcome == 'success' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload --clobber nightly packages.zip
