// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HoC @Consume and withConsumption selector validation. Should properly select all properties with or without alias. 1`] = `
<Memo(DS.Observer)>
  <DS.Consumer>
    <PropsRenderer
      first="first"
      second={2}
      third={false}
    >
      <div>
        {"first":"first","second":2,"third":false}
      </div>
    </PropsRenderer>
  </DS.Consumer>
</Memo(DS.Observer)>
`;

exports[`HoC @Consume and withConsumption selector validation. Should properly select all properties with or without alias. 2`] = `
<Memo(DS.Observer)>
  <DS.Consumer>
    <PropsRenderer
      aliased={
        Object {
          "first": "first",
          "second": 2,
          "third": false,
        }
      }
    >
      <div>
        {"aliased":{"first":"first","second":2,"third":false}}
      </div>
    </PropsRenderer>
  </DS.Consumer>
</Memo(DS.Observer)>
`;

exports[`HoC @Consume and withConsumption selector validation. Should properly select all properties with or without alias. 3`] = `
<Memo(DS.Observer)>
  <DS.Consumer>
    <PropsRenderer
      first="first"
      second={2}
      third={false}
    >
      <div>
        {"first":"first","second":2,"third":false}
      </div>
    </PropsRenderer>
  </DS.Consumer>
</Memo(DS.Observer)>
`;

exports[`HoC @Consume and withConsumption selector validation. Should properly select array properties with or without alias. 1`] = `
<Memo(DS.Observer)>
  <DS.Consumer>
    <PropsRenderer>
      <div>
        {}
      </div>
    </PropsRenderer>
  </DS.Consumer>
</Memo(DS.Observer)>
`;

exports[`HoC @Consume and withConsumption selector validation. Should properly select array properties with or without alias. 2`] = `
<Memo(DS.Observer)>
  <DS.Consumer>
    <PropsRenderer>
      <div>
        {}
      </div>
    </PropsRenderer>
  </DS.Consumer>
</Memo(DS.Observer)>
`;

exports[`HoC @Consume and withConsumption selector validation. Should properly select array properties with or without alias. 3`] = `
<Memo(DS.Observer)>
  <DS.Consumer>
    <PropsRenderer
      second={2}
    >
      <div>
        {"second":2}
      </div>
    </PropsRenderer>
  </DS.Consumer>
</Memo(DS.Observer)>
`;

exports[`HoC @Consume and withConsumption selector validation. Should properly select array properties with or without alias. 4`] = `
<Memo(DS.Observer)>
  <DS.Consumer>
    <PropsRenderer
      first="first"
      second={2}
    >
      <div>
        {"first":"first","second":2}
      </div>
    </PropsRenderer>
  </DS.Consumer>
</Memo(DS.Observer)>
`;

exports[`HoC @Consume and withConsumption selector validation. Should properly select array properties with or without alias. 5`] = `
<Memo(DS.Observer)>
  <DS.Consumer>
    <PropsRenderer
      alias={
        Object {
          "first": "first",
          "second": 2,
        }
      }
    >
      <div>
        {"alias":{"first":"first","second":2}}
      </div>
    </PropsRenderer>
  </DS.Consumer>
</Memo(DS.Observer)>
`;

exports[`HoC @Consume and withConsumption selector validation. Should properly select selector properties with or without alias. 1`] = `
<Memo(DS.Observer)>
  <DS.Consumer>
    <PropsRenderer
      first="first"
      second={2}
      third={false}
    >
      <div>
        {"first":"first","second":2,"third":false}
      </div>
    </PropsRenderer>
  </DS.Consumer>
</Memo(DS.Observer)>
`;

exports[`HoC @Consume and withConsumption selector validation. Should properly select selector properties with or without alias. 2`] = `
<Memo(DS.Observer)>
  <DS.Consumer>
    <PropsRenderer
      custom={
        Object {
          "first": "first",
          "second": 2,
          "third": false,
        }
      }
    >
      <div>
        {"custom":{"first":"first","second":2,"third":false}}
      </div>
    </PropsRenderer>
  </DS.Consumer>
</Memo(DS.Observer)>
`;

exports[`HoC @Consume and withConsumption selector validation. Should properly select selector properties with or without alias. 3`] = `
<Memo(DS.Observer)>
  <DS.Consumer>
    <PropsRenderer
      a="first"
      b={2}
    >
      <div>
        {"a":"first","b":2}
      </div>
    </PropsRenderer>
  </DS.Consumer>
</Memo(DS.Observer)>
`;

exports[`HoC @Consume and withConsumption selector validation. Should properly select selector properties with or without alias. 4`] = `
<Memo(DS.Observer)>
  <DS.Consumer>
    <PropsRenderer
      custom={
        Object {
          "a": "first",
        }
      }
    >
      <div>
        {"custom":{"a":"first"}}
      </div>
    </PropsRenderer>
  </DS.Consumer>
</Memo(DS.Observer)>
`;

exports[`HoC @Consume and withConsumption selector validation. Should properly select string properties with or without alias. 1`] = `
<Memo(DS.Observer)>
  <DS.Consumer>
    <PropsRenderer
      first="first"
      second={2}
      third={false}
    >
      <div>
        {"first":"first","second":2,"third":false}
      </div>
    </PropsRenderer>
  </DS.Consumer>
</Memo(DS.Observer)>
`;

exports[`HoC @Consume and withConsumption selector validation. Should properly select string properties with or without alias. 2`] = `
<Memo(DS.Observer)>
  <DS.Consumer>
    <PropsRenderer
      first="first"
      second={2}
      third={false}
    >
      <div>
        {"first":"first","second":2,"third":false}
      </div>
    </PropsRenderer>
  </DS.Consumer>
</Memo(DS.Observer)>
`;

exports[`HoC @Consume and withConsumption selector validation. Should properly select string properties with or without alias. 3`] = `
<Memo(DS.Observer)>
  <DS.Consumer>
    <PropsRenderer
      aliased={
        Object {
          "first": "first",
          "second": 2,
          "third": false,
        }
      }
    >
      <div>
        {"aliased":{"first":"first","second":2,"third":false}}
      </div>
    </PropsRenderer>
  </DS.Consumer>
</Memo(DS.Observer)>
`;
